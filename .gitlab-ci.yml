stages:
  - build
  - release
  - deploy

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH

build:
  stage: build
  image: node:8-alpine
  cache:
    key: '$CI_PROJECT_ID-dev'
    paths:
      - node_modules/
      - .yarn
  before_script:
    - yarn install --pure-lockfile --cache-folder .yarn
  script:
    - yarn build
  artifacts:
    paths:
      - dist

# typecheck:
#   stage: build
#   image: node:8-alpine
#   cache:
#     key: '$CI_PROJECT_ID-lint'
#     paths:
#       - node_modules/
#       - .yarn
#   before_script:
#     - yarn install --pure-lockfile --cache-folder .yarn
#   script:
#     - yarn typecheck

lint:
  stage: build
  image: node:8-alpine
  cache:
    key: '$CI_PROJECT_ID-lint'
    paths:
      - node_modules/
      - .yarn
  before_script:
    - yarn install --pure-lockfile --cache-folder .yarn
  script:
    - yarn lint

# docker-build:
#   stage: release
#   image: docker:stable
#   only:
#     - master
#   dependencies:
#     - build
#   before_script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
#   script:
#     # - docker pull $CONTAINER_IMAGE:latest || exit 0
#     - docker build -t $CONTAINER_IMAGE:$CI_COMMIT_SHA -t $CONTAINER_IMAGE:latest .
#     - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
#     - docker push $CONTAINER_IMAGE:latest

sentry:
  stage: release
  image: getsentry/sentry-cli
  dependencies:
    - build
  script:
    - sentry-cli releases new $CI_COMMIT_SHA
    - sentry-cli releases set-commits $CI_COMMIT_SHA --commit $SENTRY_REPOSITORY@$CI_COMMIT_SHA
    - sentry-cli releases files $CI_COMMIT_SHA upload-sourcemaps ./dist
    - sentry-cli releases finalize $CI_COMMIT_SHA
# deploy:
#   stage: deploy
#   only:
#     - master
#   image:
#     name: byrnedo/alpine-curl
#     entrypoint: ['/bin/sh', '-c']
#   script:
#     - curl -vvv -X POST -d " " $DEPLOY_NOTIFICATION_URI
# deploy:
#   stage: deploy
#   image: docker:git
#   services:
#     - docker:dind
#   environment:
#     name: production
#     url: https://tribesrevengeance.net
#   before_script:
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#     - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#     - chmod 600 ~/.ssh/id_rsa
#   script:
#     - ssh $DEPLOY_HOST "docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA"
#     - >
#       ssh $DEPLOY_HOST "
#       docker service update
#       --image $CONTAINER_IMAGE:$CI_COMMIT_SHA
#       --env-add SENTRY_RELEASE:$CI_COMMIT_SHA
#       --update-failure-action=rollback
#       $DEPLOY_SERVICE"
#     - >
#       docker run
#       -e "SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN"
#       -e "SENTRY_ORG=$SENTRY_ORG"
#       -e "SENTRY_PROJECT=$SENTRY_PROJECT"
#       getsentry/sentry-cli releases deploys $CI_COMMIT_SHA new -e production
