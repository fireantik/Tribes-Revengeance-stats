stages:
  - install
  - build
  - post-build
  - deploy
  - rollback

install-dev:
  stage: install
  image: node:8-alpine
  cache:
    key: "$CI_PROJECT_ID-dev"
    paths:
      - node_modules/
      - .yarn
  script:
    - yarn install --pure-lockfile --cache-folder .yarn
  artifacts:
    paths:
      - node_modules/

install-prod:
  stage: install
  image: node:8-alpine
  cache:
    untracked: true
    key: "$CI_PROJECT_ID-prod"
    paths:
      - node_modules/
      - .yarn
  script:
    - yarn install --pure-lockfile --cache-folder .yarn --production
  artifacts:
    paths:
      - node_modules/

build:
  stage: build
  image: node:8-alpine
  dependencies:
    - install-dev
  script:
    - yarn build
  artifacts:
    paths:
      - dist

docker-build:
  stage: post-build
  image: docker:stable
  dependencies:
    - install-prod
    - build
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  variables:
    DOCKER_DRIVER: overlay2
    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  script:
    - docker build --pull -t $CONTAINER_IMAGE:$CI_COMMIT_SHA -t $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE:latest

sentry:
  stage: post-build
  image: getsentry/sentry-cli
  dependencies:
    - build
  script:
    - sentry-cli releases new $CI_COMMIT_SHA
    - sentry-cli releases set-commits $CI_COMMIT_SHA --auto
    - sentry-cli releases files $CI_COMMIT_SHA upload-sourcemaps ./dist
    - sentry-cli releases finalize $CI_COMMIT_SHA

deploy:
  stage: deploy
  image: docker:git
  services:
    - docker:dind
  variables:
    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  environment:
    name: production
    url: https://tribesrevengeance.net
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - ssh $DEPLOY_HOST "docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA)"
    - >
      ssh $DEPLOY_HOST "
      docker service update
      --image $CONTAINER_IMAGE:$CI_COMMIT_SHA
      --env-add SENTRY_RELEASE:$CI_COMMIT_SHA 
      --update-failure-action=rollback
      $DEPLOY_SERVICE"
    - >
      docker run -it sentry-cli
      -e "SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN"
      -e "SENTRY_ORG=$SENTRY_ORG"
      -e "SENTRY_PROJECT=$SENTRY_PROJECT"
      "releases deploys $CI_COMMIT_SHA new -e production"
